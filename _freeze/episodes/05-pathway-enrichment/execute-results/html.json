{
  "hash": "339080cd0f20099a98ea5850ac2a3935",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Enrichment analysis\"\nformat:\n    html:\n        fig-width: 8\n        fig-height: 4\n        code-annotations: hover\n---\n\n\n\n\n::: {.mwadd}\n\nI wonder how much time there's left if everything before this is covered, so I'd keep this section rather short to essentials.\nIf people are able to generate a DEG table they've already come a long way.\n\n(No further feedback since this section isn't finished yet I think.)\n\n:::\n\n## Clustering and heatmaps\n\n**TODO**: add some text to describe the heatmap \n\nRead the processed data into memory:\n\n\n\n\n::: {.cell filename='R'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tidyverse' was built under R version 4.1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tibble' was built under R version 4.1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tidyr' was built under R version 4.1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'readr' was built under R version 4.1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'purrr' was built under R version 4.1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'forcats' was built under R version 4.1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'lubridate' was built under R version 4.1.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyheatmaps)\n\nvariance_stabilised_counts <- read.csv('../data_processed/variance_stabilized_dataset.csv')\nmetadata <- read.csv(\"../data/samples_to_condition.csv\", header = T)\nDEGs <- read.csv('../data_processed/DEGs_spaceflight_vs_ground.csv', header = T)\n\nselection <- DEGs$genes\n\nvsc_selection <- variance_stabilised_counts %>% \n                    filter(gene %in% selection) %>%\n                    pivot_longer(cols = - gene, names_to = \"sample\", values_to = \"vst_counts\") %>% \n                    merge(metadata, by.x = \"sample\", by.y = \"sample_name\") \n```\n:::\n\n::: {.cell filename='R'}\n\n```{.r .cell-code}\nheatmap <- tidyheatmap(df = vsc_selection,\n            rows = gene,\n            columns = sample,\n            values = vst_counts,\n            scale = \"row\",\n            annotation_col = c(condition),\n            gaps_col = condition,\n            cluster_rows = TRUE,\n            # cluster_cols = TRUE,\n            color_legend_n = 7,\n            show_rownames = TRUE,\n            show_colnames = FALSE\n            # filename = \"heatmap.pdf\"\n)\n\nheatmap\n```\n\n::: {.cell-output-display}\n![](05-pathway-enrichment_files/figure-html/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\n\n\n## Enrichment analysis of gene lists\n\nWe want to assign some sort of funtion or pathway to a cluster / list of genes. To do this we can use GO term enrichment.\n\n**TODO**:\n\n- Add description to do this in a webserver e.g. [g:profiler](http://biit.cs.ut.ee/gprofiler/gost). Seems up to date and also looks like it contains many different organisms. \n- Add instructions to do this in code via `clusterProfiler`\n- The example dataset is from Arabidopsis but preferably the instructions and code should work for a wide range of organisms, such that the instructions are easily usable for anyone. ",
    "supporting": [
      "05-pathway-enrichment_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}